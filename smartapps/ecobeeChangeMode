/**
 *  ecobeeChangeMode
 *
 *  Copyright 2014 Yves Racine
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 * Change the mode manually (by pressing the app's play button) and automatically at the ecobee thermostat(s)
 * If you need to set it for both Away and Home modes, you'd need to save them as 2 distinct apps
 * Don't forget to set the app to run only for the target mode.
 */
definition(
    name: "ecobeeChangeMode",
    namespace: "yracine",
    author: "Yves Racine",
    description: "Change the mode manually (by pressing the app's play button) and automatically at the ecobee thermostat(s)",
    category: "My Apps",
    iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
    iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png")


preferences {
	section("When Smartthings's hello home mode change to [ex. 'Away', 'Home']") {
		input "newMode", "mode", metadata:[values:["Away", "Home", "Night"]]
	}

	section("Change the following thermostat(s)...") {
		input "thermostats", "capability.thermostat", title:"Which thermostat(s)", multiple: true
	}
	section("to this thermostat's program... (ex. Away, Home, Awake, Sleep, any Custom)") {
		input "givenClimate", "string", title: "Climate?"
	}
    
    section( "Notifications" ) {
		input "sendPushMessage", "enum", title: "Send a push notification?", metadata:[values:["Yes","No"]], required:false
		input "phone", "phone", title: "Send a Text Message?", required: false
	}
    
}

def installed() {
	subscribe(location, changeMode)
	subscribe(app, changeMode)
}

def updated() {
	unsubscribe()
	subscribe(location, changeMode)
	subscribe(app, changeMode)
}

def changeMode(evt) {
    def message
    
   log.info message	
    message = "ecobeeChangeMode>Setting the thermostat(s) to $givenClimate.."
    send(message)
    if (newMode == "Away") {
        if (givenClimate.trim().toUpperCase() == 'AWAY') {
        	thermostats?.away()
                
        } else thermostats?.setClimate("", givenClimate) 

    }
    else {
        if (givenClimate.trim().toUpperCase() == 'HOME') {
            thermostats?.present()
                
        } else thermostats?.setClimate("", givenClimate) 
    }
}

private send(msg) {
    if ( sendPushMessage != "No" ) {
        log.debug( "sending push message" )
        sendPush( msg )	
    }
    if ( phone ) {
        log.debug( "sending text message" )
        sendSms( phone, msg )
    }

    log.debug msg
}
